{"version":3,"file":"library-app.js","sources":["ng://library-app/lib/constant/const-value.ts","ng://library-app/lib/constant/default-component/default-component.ts","ng://library-app/lib/constant/models/default-model.ts","ng://library-app/lib/constant/models/courier/courier.ts","ng://library-app/lib/constant/models/customer/customer.ts","ng://library-app/lib/constant/models/delivery/delivery.ts","ng://library-app/lib/constant/models/meal/meal.ts","ng://library-app/lib/constant/models/order/order.ts","ng://library-app/lib/constant/models/order_item/order-item.ts","ng://library-app/lib/constant/models/order_status_history/order-status-history.ts","ng://library-app/lib/constant/models/order_status_type/order-status-type.ts","ng://library-app/lib/constant/models/point/point.ts","ng://library-app/lib/constant/models/restaurant/restaurant.ts","ng://library-app/lib/constant/models/query-param-model.ts","ng://library-app/lib/services/mics/utils.service.ts","ng://library-app/lib/services/data/dummy-data.service.ts","ng://library-app/lib/services/mics/notification.service.ts","ng://library-app/lib/services/firebase/firebase-data.service.ts","ng://library-app/lib/services/data/simulator-data.service.ts","ng://library-app/lib/library-app.service.ts","ng://library-app/lib/library-app.component.ts","ng://library-app/lib/library-app.module.ts","ng://library-app/lib/services/test-app.service.ts","ng://library-app/public-api.ts","ng://library-app/library-app.ts"],"sourcesContent":["export enum ENUM_TABLES {\r\n  courier = 'courier',\r\n  customer = 'customer',\r\n  delivery = 'delivery',\r\n  meal = 'meal',\r\n  order = 'order',\r\n  order_item = 'order_item',\r\n  order_status_history = 'order_status_history',\r\n  point = 'point',\r\n  restaurant = 'restaurant',\r\n}\r\n","import {OnDestroy} from \"@angular/core\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\nexport class DefaultComponent implements OnDestroy {\r\n  _subscriptionList: Subscription;\r\n\r\n  constructor() {\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  /**\r\n   * unsubscribe all subscription which add into the component\r\n   * it is important to prevent subscription still exist when component is destroyed\r\n   */\r\n  unsubscribeAll() {\r\n    if (this._subscriptionList) {\r\n      this._subscriptionList.unsubscribe();\r\n    }\r\n    this._subscriptionList = new Subscription();\r\n\r\n  }\r\n\r\n  /**\r\n   * add subscriptions to component storage\r\n   * @param subscriptions\r\n   */\r\n  addSubscribes(...subscriptions) {\r\n    subscriptions.forEach((el) => {\r\n      this._subscriptionList.add(el);\r\n    });\r\n  }\r\n}\r\n","import {IDefaultModel} from './i-default-model';\r\n\r\nexport class DefaultModel implements IDefaultModel {\r\n  _raw: any;\r\n\r\n  constructor(data: any) {\r\n    if (data.hasOwnProperty('_raw')) {\r\n      delete data['_raw'];\r\n    }\r\n    this._raw = data;\r\n  }\r\n\r\n  copyInto(json): void {\r\n    for (let key in json) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = json[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  getData(): object {\r\n    const self = this;\r\n    const result = {};\r\n\r\n    Object.keys(this).map(key => {\r\n      if (this[key] instanceof DefaultModel) {\r\n        return;\r\n      }\r\n\r\n      switch (key) {\r\n        case '_raw':\r\n        case 'meals':\r\n        case 'items':\r\n          return;\r\n      }\r\n\r\n      result[key] = this[key];\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\n\r\nexport class Courier extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  vin: string = '';\r\n  driver_license: string = '';\r\n  email: string = '';\r\n  phone_no: string = '';\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\n\r\nexport class Customer extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  address: string = '';\r\n  lat: string = '';\r\n  long: string = '';\r\n  phone_no: string = '';\r\n  email: string = '';\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n\r\n}\r\n","export class Delivery {\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\n\r\nexport class Meal extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  description: string = '';\r\n  price: number = 0;\r\n  image: string = '';\r\n  restaurant_name: string = '';\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Restaurant} from \"../restaurant/restaurant\";\r\nimport {Customer} from \"../customer/customer\";\r\nimport {OrderItem} from \"../order_item/order-item\";\r\n\r\nexport class Order extends DefaultModel {\r\n  id: string = '';\r\n  date_time: number = 0;\r\n  restaurant_id: string = '';\r\n  customer_id: string = '';\r\n  total: number = 0;\r\n\r\n  restaurant: Restaurant;\r\n  customer: Customer;\r\n  items: OrderItem[]\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Order} from \"../order/order\";\r\nimport {Meal} from \"../meal/meal\";\r\n\r\nexport class OrderItem extends DefaultModel {\r\n  id: string = '';\r\n  order_id: string = '';\r\n  meal_id: string = '';\r\n  quantity: number = 0;\r\n\r\n  order: Order;\r\n  meal: Meal;\r\n\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","export class OrderStatusHistory {\r\n}\r\n","export class OrderStatusType {\r\n}\r\n","export class Point {\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Meal} from \"../meal/meal\";\r\n\r\nexport class Restaurant extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  address: string = '';\r\n  phone_no: string = '';\r\n  lat: string = '';\r\n  long: string = '';\r\n\r\n  meal_ids: string[] = [];\r\n  meals: Meal[] = [];\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n\r\n}\r\n","enum EnumOperation {\r\n  LESS = '<',\r\n  LESS_EQUAL = '<=',\r\n  EQUAL = '==',\r\n  GREATER = '>',\r\n  GREATER_EQUAL = '>='\r\n}\r\n\r\nexport class QueryParamModel {\r\n  static OPERATIONS = EnumOperation;\r\n  key: string;\r\n  operation: EnumOperation;\r\n  value: any;\r\n\r\n  constructor(key: string, operation: EnumOperation, value: any) {\r\n    this.key = key;\r\n    this.operation = operation;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n\r\n  constructor(private _HttpClient: HttpClient) {\r\n  }\r\n\r\n  public getJSON(url: string): Observable<any> {\r\n    return this._HttpClient.get(url);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport _ from 'lodash';\r\nimport {first, tap} from 'rxjs/operators';\r\nimport {ENUM_TABLES} from \"../../constant/const-value\";\r\nimport {IDefaultModelConstructor} from \"../../constant/models/i-default-model\";\r\nimport {UtilsService} from \"../mics/utils.service\";\r\n\r\nimport restaurantData from \"../../dummy/restaurant.json\";\r\nimport courierData from \"../../dummy/courier.json\";\r\nimport mealData from \"../../dummy/meal.json\";\r\nimport customerData from \"../../dummy/customer.json\";\r\nimport {of} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DummyDataService {\r\n  readonly CONSTANT_PATH = 'assets/dummy/';\r\n  readonly JSONS = {\r\n    [ENUM_TABLES.restaurant]: restaurantData,\r\n    [ENUM_TABLES.customer]: customerData,\r\n    [ENUM_TABLES.meal]: mealData,\r\n    [ENUM_TABLES.courier]: courierData,\r\n  };\r\n\r\n  constructor(private _UtilsService: UtilsService) {\r\n  }\r\n\r\n  convertDummyDataToModel(table: ENUM_TABLES, modelClass: IDefaultModelConstructor): Promise<any[]> {\r\n    if (!this.JSONS[table]) {\r\n      return Promise.resolve([]);\r\n    }\r\n    return of()\r\n      .toPromise()\r\n      .then(() => {\r\n        const data = this.JSONS[table];\r\n        const array = [];\r\n        _.map(data, (x) => {\r\n          const model = new modelClass(x);\r\n          array.push(model);\r\n        });\r\n        return array;\r\n      });\r\n    // return this._UtilsService.getJSON(this.CONSTANT_PATH + this.JSONS[table])\r\n    //   .pipe(\r\n    //     tap(),\r\n    //     first()\r\n    //   )\r\n    //   .toPromise()\r\n    //   .then(data => {\r\n    //     const array = [];\r\n    //     _.map(data, (x) => {\r\n    //       const model = new modelClass(x);\r\n    //       array.push(model);\r\n    //     });\r\n    //     return array;\r\n    //   });\r\n  }\r\n\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  readonly _Observable_Message: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  reset(): void {\r\n    this._Observable_Message.next(null);\r\n  }\r\n\r\n  pushMessage(message: string) {\r\n    this._Observable_Message.next(message);\r\n  }\r\n\r\n  getMessageOservable() {\r\n    return this._Observable_Message;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AngularFirestore} from '@angular/fire/firestore';\r\nimport {Customer} from '../../constant/models/customer/customer';\r\nimport _ from 'lodash';\r\nimport {DummyDataService} from '../data/dummy-data.service';\r\nimport {first, map, tap} from 'rxjs/operators';\r\nimport {IDefaultModel, IDefaultModelConstructor} from '../../constant/models/i-default-model';\r\nimport {Restaurant} from '../../constant/models/restaurant/restaurant';\r\nimport {Courier} from '../../constant/models/courier/courier';\r\nimport {Meal} from '../../constant/models/meal/meal';\r\nimport {ENUM_TABLES} from '../../constant/const-value';\r\nimport {NotificationService} from '../mics/notification.service';\r\nimport {OrderItem} from '../../constant/models/order_item/order-item';\r\nimport {Order} from '../../constant/models/order/order';\r\nimport {QueryParamModel} from \"../../constant/models/query-param-model\";\r\nimport {Delivery, OrderStatusHistory} from \"../../constant/models\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseDataService {\r\n  readonly TABLES = {\r\n    [ENUM_TABLES.customer]: {\r\n      name: ENUM_TABLES.customer,\r\n      class: Customer\r\n    },\r\n    [ENUM_TABLES.courier]: {\r\n      name: ENUM_TABLES.courier,\r\n      class: Courier\r\n    },\r\n    [ENUM_TABLES.restaurant]: {\r\n      name: ENUM_TABLES.restaurant,\r\n      class: Restaurant\r\n    },\r\n    [ENUM_TABLES.meal]: {\r\n      name: ENUM_TABLES.meal,\r\n      class: Meal\r\n    },\r\n    [ENUM_TABLES.order]: {\r\n      name: ENUM_TABLES.order,\r\n      class: Order\r\n    },\r\n    [ENUM_TABLES.delivery]: {\r\n      name: ENUM_TABLES.delivery,\r\n      class: Delivery\r\n    },\r\n    [ENUM_TABLES.order_item]: {\r\n      name: ENUM_TABLES.order_item,\r\n      class: OrderItem\r\n    },\r\n    [ENUM_TABLES.order_status_history]: {\r\n      name: ENUM_TABLES.order_status_history,\r\n      class: OrderStatusHistory\r\n    },\r\n  };\r\n\r\n  constructor(private _AngularFirestore: AngularFirestore,\r\n              private _DummyDataService: DummyDataService,\r\n              private _NotificationService: NotificationService) {\r\n  }\r\n\r\n  /**\r\n   * reset DB\r\n   * @returns {Promise<void>}\r\n   */\r\n  async resetDB() {\r\n    // delete tables\r\n    await Promise.all(_.map(this.TABLES, async (x) => {\r\n      await this.deleteTable(x.name);\r\n    }));\r\n\r\n    // add tables\r\n    await Promise.all(_.map(this.TABLES, async (x) => {\r\n      await this.addDB(x);\r\n    }));\r\n\r\n    // converseMeal\r\n    await this.linkRestaurantMealDB();\r\n\r\n    this._NotificationService.pushMessage('All data is reset!!');\r\n  }\r\n\r\n  /**\r\n   * link restaurant and meals data\r\n   * @returns {Promise<void>}\r\n   */\r\n  async linkRestaurantMealDB() {\r\n    this._NotificationService.pushMessage('Link Restaurant & Meal data');\r\n    await this.getRestaurant()\r\n      .then((restaurants) => {\r\n        // console.log(restaurants);\r\n        this.getMeals()\r\n          .then((meals) => {\r\n            // console.log(meals);\r\n            _.map(restaurants, (restaurant: Restaurant) => {\r\n              // console.log(restaurant);\r\n              restaurant.meal_ids = _.map(_.filter(meals, (meal: Meal) => {\r\n                return restaurant.name === meal.restaurant_name;\r\n              }), x => x.id);\r\n\r\n              this._AngularFirestore.collection(this.TABLES[ENUM_TABLES.restaurant].name)\r\n                .doc(restaurant.id).set(restaurant.getData());\r\n            });\r\n          });\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * add data of collection\r\n   * @param object\r\n   * @returns {Promise<unknown[]>}\r\n   */\r\n  private addDB(object) {\r\n    return this._DummyDataService.convertDummyDataToModel(object.name, object.class)\r\n      .then(async (rs) => {\r\n        if (!rs) {\r\n          return;\r\n        }\r\n        const itemsCollection = this._AngularFirestore.collection(object.name);\r\n        return await Promise.all(_.map(rs, async (x) => {\r\n          await itemsCollection.add(x.getData());\r\n          console.log(`add ${object.name}`);\r\n          this._NotificationService.pushMessage(`add ${object.name}`);\r\n        }));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get customer data\r\n   * @returns {Promise<Customer[]>}\r\n   */\r\n  getCustomer(): Promise<Customer[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.customer])\r\n      .then((rs) => rs as unknown as Customer[]);\r\n  }\r\n\r\n  /**\r\n   * get courier data\r\n   * @returns {Promise<Courier[]>}\r\n   */\r\n  getCourier(): Promise<Courier[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.courier])\r\n      .then((rs) => rs as unknown as Courier[]);\r\n  }\r\n\r\n  /**\r\n   * get restaurant data\r\n   * @returns {Promise<Restaurant[]>}\r\n   */\r\n  getRestaurant(): Promise<Restaurant[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.restaurant])\r\n      .then((restaurants) => {\r\n        return this.getMeals()\r\n          .then((meals) => {\r\n            _.map(restaurants, (restaurant: Restaurant) => {\r\n              restaurant.meals = _.filter(meals, (meal: Meal) => {\r\n                return restaurant.meal_ids.indexOf(meal.id) >= 0;\r\n              });\r\n            });\r\n            return restaurants as unknown as Restaurant[];\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get meals data\r\n   * @returns {Promise<Meal[]>}\r\n   */\r\n  getMeals(): Promise<Meal[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.meal])\r\n      .then((rs) => rs as unknown as Meal[]);\r\n  }\r\n\r\n  /**\r\n   * get order items data\r\n   * @param queryParams\r\n   * @returns {Promise<Meal[]>}\r\n   */\r\n  async getOrderItems(queryParams?: QueryParamModel[]): Promise<OrderItem[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.order_item], queryParams)\r\n      .then((rs) => rs as unknown as OrderItem[])\r\n      .then((orderItems) => {\r\n        _.map(orderItems, async (orderItem: OrderItem) => {\r\n          // get meal\r\n          await this.getDBWithId(this.TABLES[ENUM_TABLES.meal], orderItem.meal_id)\r\n            .then((meal) => {\r\n              orderItem.meal = meal as unknown as Meal;\r\n            });\r\n        });\r\n        return orderItems;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get order details\r\n   * @returns {Promise<Order[]>}\r\n   */\r\n  async getOrder(): Promise<Order[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.order])\r\n      .then((rs) => rs as unknown as Order[])\r\n      .then((orders) => {\r\n        orders = orders as unknown as Order[]\r\n        _.map(orders, async (order: Order) => {\r\n\r\n          // get customer of each order\r\n          await this.getDBWithId(this.TABLES[ENUM_TABLES.customer], order.customer_id)\r\n            .then((customer) => {\r\n              order.customer = customer as unknown as Customer;\r\n            });\r\n\r\n          // get item of each order\r\n          await this.getOrderItems([new QueryParamModel('order_id', QueryParamModel.OPERATIONS.EQUAL, order.id)])\r\n            .then((items) => {\r\n              order.items = items as unknown as OrderItem[];\r\n            });\r\n\r\n          // get restaurant for each order\r\n          await this.getDBWithId(this.TABLES[ENUM_TABLES.restaurant], order.restaurant_id)\r\n            .then((restaurant) => {\r\n              order.restaurant = restaurant as unknown as Restaurant;\r\n            });\r\n        });\r\n\r\n        return orders;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get data of collection\r\n   * @param object\r\n   * @returns {Promise<IDefaultModelConstructor[]>}\r\n   */\r\n  private getDB(object, queryParams?: QueryParamModel[], id?: string): Promise<IDefaultModelConstructor[]> {\r\n    const collection = this._AngularFirestore.collection(object.name, ref => {\r\n      let newRef = null;\r\n      if (!!queryParams) {\r\n        _.map(queryParams, (x: QueryParamModel) => {\r\n          newRef = newRef ? newRef.where(x.key, x.operation, x.value) : ref.where(x.key, x.operation, x.value);\r\n        });\r\n      }\r\n      return newRef || ref;\r\n    });\r\n\r\n    return collection\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(items => items.map(a => {\r\n          const data = a.payload.doc.data() as Object;\r\n          const id = a.payload.doc.id;\r\n          // update id\r\n          data['id'] = id;\r\n          return data;\r\n        })),\r\n        map((items) => _.filter(items, doc => {\r\n          if (!!id) {\r\n            return doc.id === id;\r\n          }\r\n          return doc;\r\n        }))\r\n      )\r\n      .pipe(tap(), first()).toPromise()\r\n      .then((rs) => {\r\n        return this.convertToClassObject(rs, object.class);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get object by id\r\n   * @param object\r\n   * @param id\r\n   * @returns {Promise<IDefaultModelConstructor[]>}\r\n   */\r\n  private getDBWithId(object, id: string): Promise<IDefaultModelConstructor> {\r\n    const collection = this._AngularFirestore.doc(`${object.name}/${id}`);\r\n    return collection\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(a => {\r\n          const data = a.payload.data() as Object;\r\n          const id = a.payload.id;\r\n          // update id\r\n          data['id'] = id;\r\n          return data;\r\n        })\r\n      )\r\n      .pipe(tap(), first()).toPromise()\r\n      .then((rs) => {\r\n        const array = this.convertToClassObject([rs], object.class);\r\n        return array.length ? array[0] : null;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * convert data to class object\r\n   * @param data\r\n   * @param modelClass\r\n   * @returns {any[]}\r\n   */\r\n  private convertToClassObject(data: any[], modelClass: IDefaultModelConstructor): IDefaultModelConstructor[] {\r\n    const array = [];\r\n    _.map(data, (x) => {\r\n      const model = new modelClass(x);\r\n      array.push(model);\r\n    });\r\n    // console.log(array);\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * create document, set id\r\n   * @param object\r\n   * @returns {Promise<void>}\r\n   */\r\n  createWithObject(object: IDefaultModel) {\r\n    const id = this._AngularFirestore.createId();\r\n    const collection = this._AngularFirestore.collection(this.getTable(object.constructor.name));\r\n    return collection.doc(id).set(object.getData())\r\n      .then(() => {\r\n        object.id = id;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * update document\r\n   * @param object\r\n   */\r\n  updateWithObject(object: IDefaultModel) {\r\n    const collection = this._AngularFirestore.collection(this.getTable(object.constructor.name));\r\n    collection.doc(object.id).update(object.getData());\r\n  }\r\n\r\n  /**\r\n   * get table name from class name\r\n   * @param className\r\n   * @returns {any}\r\n   */\r\n  getTable(className: string) {\r\n    return _.find(this.TABLES, (table) => {\r\n      return table.class.name === className;\r\n    }).name;\r\n  }\r\n\r\n  /*========delete=========*/\r\n\r\n  deleteOrder() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.order].name);\r\n  }\r\n\r\n  deleteOrderItem() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.order_item].name);\r\n  }\r\n\r\n  deleteDelivery() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.delivery].name);\r\n  }\r\n\r\n  /**\r\n   * delete data of collection\r\n   * @param name\r\n   * @returns {Promise<void>}\r\n   */\r\n  private deleteTable(name: string) {\r\n    return this._AngularFirestore.collection(name).get().toPromise()\r\n      .then(res => {\r\n        return res.forEach(async element => {\r\n          await element.ref.delete();\r\n          console.log(`delete ${name}`);\r\n          this._NotificationService.pushMessage(`delete ${name}`);\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport _ from 'lodash';\r\nimport {FirebaseDataService} from \"../firebase/firebase-data.service\";\r\nimport {Customer} from \"../../constant/models/customer/customer\";\r\nimport {Restaurant} from \"../../constant/models/restaurant/restaurant\";\r\nimport {Meal} from \"../../constant/models/meal/meal\";\r\nimport {DefaultModel} from \"../../constant/models/default-model\";\r\nimport {Order} from \"../../constant/models/order/order\";\r\nimport {OrderItem} from \"../../constant/models/order_item/order-item\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SimulatorDataService {\r\n\r\n  constructor(private _FirebaseDataService: FirebaseDataService) {\r\n\r\n  }\r\n\r\n  /**\r\n   * start simulator\r\n   * @returns {Promise<void>}\r\n   */\r\n  async start() {\r\n    Promise.all([this._FirebaseDataService.getCustomer(),\r\n      this._FirebaseDataService.getRestaurant()])\r\n      .then(async ([customers, restaurants]) => {\r\n        console.log(customers, restaurants);\r\n        const customer: Customer = this.getRandom(customers);\r\n        const restaurant: Restaurant = this.getRandom(restaurants);\r\n        const meal: Meal = this.getRandom(restaurant.meals);\r\n        console.log(customer, restaurant, meal);\r\n        console.log(customer instanceof DefaultModel);\r\n\r\n        // create order\r\n        const order = new Order({\r\n          date_time: new Date().getTime(),\r\n          restaurant_id: restaurant.id,\r\n          customer_id: customer.id\r\n        });\r\n\r\n        await this._FirebaseDataService.createWithObject(order);\r\n\r\n        // create order item\r\n        const orderItem = new OrderItem(\r\n          {\r\n            meal_id: meal.id,\r\n            quantity: this.getRandom(5),\r\n            order_id: order.id\r\n          }\r\n        );\r\n        orderItem.meal = meal;\r\n        orderItem.order = order;\r\n\r\n        await this._FirebaseDataService.createWithObject(orderItem);\r\n        order.total += orderItem.meal.price * orderItem.quantity;\r\n        this._FirebaseDataService.updateWithObject(order);\r\n      });\r\n  }\r\n\r\n  stop() {\r\n\r\n  }\r\n\r\n  /**\r\n   * get random\r\n   * @param value\r\n   * @returns {any | null | number}\r\n   */\r\n  getRandom(value: any[] | number): any {\r\n    if (!isNaN(Number(value))) {\r\n      return _.random(0, value);\r\n    } else {\r\n      value = value as unknown as any[];\r\n      return value[_.random(0, value.length - 1)];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibraryAppService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  testString() {\r\n    return 'Hello';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-library-app',\r\n  template: `\r\n    <p>\r\n      library-app works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LibraryAppComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LibraryAppComponent } from './library-app.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LibraryAppComponent],\r\n  imports: [\r\n  ],\r\n  exports: [LibraryAppComponent]\r\n})\r\nexport class LibraryAppModule { }\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestAppService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  testString() {\r\n    return 'Hello Test App';\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of library-app\r\n */\r\n\r\nexport * from './lib/constant';\r\nexport * from './lib/services';\r\nexport * from './lib/library-app.service';\r\nexport * from './lib/library-app.component';\r\nexport * from './lib/library-app.module';\r\nexport * from './lib/services/test-app.service';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}