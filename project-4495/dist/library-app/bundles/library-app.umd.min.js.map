{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://library-app/lib/constant/const-value.ts","ng://library-app/lib/constant/models/delivery/delivery-status-history.ts","ng://library-app/lib/constant/default-component/default-component.ts","ng://library-app/lib/constant/models/default-model.ts","ng://library-app/lib/constant/models/courier/courier.ts","ng://library-app/lib/constant/models/customer/customer.ts","ng://library-app/lib/constant/models/delivery/delivery.ts","ng://library-app/lib/constant/models/query-param-model.ts","ng://library-app/lib/constant/models/meal/meal.ts","ng://library-app/lib/constant/models/order/order.ts","ng://library-app/lib/constant/models/order_item/order-item.ts","ng://library-app/lib/constant/models/point/point.ts","ng://library-app/lib/constant/models/restaurant/restaurant.ts","ng://library-app/lib/services/data/simulator-data.service.ts","ng://library-app/lib/services/data/dummy-data.service.ts","ng://library-app/lib/services/mics/notification.service.ts","ng://library-app/lib/services/map/map.service.ts","ng://library-app/lib/services/firebase/firebase-data.service.ts","ng://library-app/lib/library-app.service.ts","ng://library-app/lib/library-app.component.ts","ng://library-app/lib/library-app.module.ts","ng://library-app/lib/services/test-app.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","ENUM_TABLES","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","__read","o","m","ar","error","Delivery_Status","DefaultComponent","unsubscribeAll","ngOnDestroy","_subscriptionList","unsubscribe","Subscription","addSubscribes","_this","subscriptions","_i","forEach","el","add","DefaultModel","data","_raw","copyInto","json","getData","keys","map","Courier","_super","id","name","vin","driver_license","email","phone_no","lat","lng","Customer","address","password","Delivery","points","courier_id","order_id","status_history","currentStatus","timeToNextStatus","path_to_restaurant","path_to_customer","_.map","x","JSON","parse","self","stringify","setStatusHistory","histories","_.maxBy","date_time","EnumOperation","DeliveryStatusHistory","status","delivery_id","Meal","description","price","image","restaurant_name","Order","restaurant_id","customer_id","total","OrderItem","meal_id","quantity","Restaurant","img1","img2","del_time","del_fee","rating","meal_ids","meals","SIMULATOR_MESSAGE","QueryParamModel","operation","OPERATIONS","DummyDataService","JSONS","_a","restaurant","restaurantData","customer","customerData","meal","mealData","courier","courierData","convertDummyDataToModel","table","modelClass","of","toPromise","array","model","Injectable","providedIn","NotificationService","_Observable_Message","BehaviorSubject","reset","pushMessage","message","getMessageOservable","MapService","renderDirection","from","to","google","maps","DirectionsService","route","origin","destination","travelMode","TravelMode","response","DirectionsStatus","console","log","window","alert","getLatLngFromAddress","Geocoder","geocode","results","FirebaseDataService","_AngularFirestore","_AngularFireDatabase","_DummyDataService","_NotificationService","_MapService","_AngularFireAuth","TABLES","class","order","delivery","order_item","delivery_status_history","resetDB","all","deleteTable","addDB","linkRestaurantMealDB","getRestaurant","restaurants","getMeals","filter","collection","doc","set","object","rs","itemsCollection","getCustomer","getDB","getCustomerByEmail","find","getCourier","getDeliveries","getDeliveryStatusHistory","getOrderById","getDeliveryById","getDBWithId","getStatusHistoryOfDelivery","queryParams","indexOf","getOrderItems","orderItems","orderItem","getOrders","orders","EQUAL","items","ref","newRef","where","snapshotChanges","pipe","a","payload","tap","first","convertToClassObject","createWithObject","createId","getTable","updateWithObject","update","className","deleteOrder","deleteOrderItem","deleteDelivery","deleteDeliveryStatus","get","res","element","delete","getPointsRealTime","getRealTimeDB","list","valueChanges","signUp","user","geoPoint","createUserWithEmailAndPassword","catch","signIn","signInWithEmailAndPassword","getRandom","isNaN","Number","random","checkout","_b","order_1","Date","getTime","Math","round","LatLng","deliveryStatusHistory","ORDERED","moment","valueOf","e_1","AngularFirestore","AngularFireDatabase","AngularFireAuth","SimulatorDataService","_FirebaseDataService","start","time","START","deliveryList","DELIVERED","STOP","orderList","deliveredDeliveryList","interval","setInterval","clearInterval","handleDelivery","STEP","nextStatus","PREPARING","WAIT_FOR_PICK_UP","DELIVERING","statusHistory","stop","generateOrder","customers","couriers","generateOneOrder","_c","MESSAGE","LibraryAppService","testString","LibraryAppComponent","ngOnInit","Component","selector","template","LibraryAppModule","NgModule","declarations","imports","NguiMapModule","forRoot","apiUrl","exports","TestAppService"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum ENUM_TABLES {\r\n  courier = 'courier',\r\n  customer = 'customer',\r\n  delivery = 'delivery',\r\n  meal = 'meal',\r\n  order = 'order',\r\n  order_item = 'order_item',\r\n  point = 'point',\r\n  restaurant = 'restaurant',\r\n  delivery_status_history = 'delivery_status_history',\r\n}\r\n","import {DefaultModel} from '../default-model';\r\n\r\nexport enum Delivery_Status {\r\n  ORDERED = 'ORDERED',\r\n  PREPARING = 'PREPARING',\r\n  WAIT_FOR_PICK_UP = 'WAIT_FOR_PICK_UP',\r\n  DELIVERING = 'DELIVERING',\r\n  DELIVERED = 'DELIVERED'\r\n}\r\n\r\nexport class DeliveryStatusHistory extends DefaultModel {\r\n  id: string = '';\r\n  status: Delivery_Status = null;\r\n  delivery_id: string = '';\r\n  date_time: number = 0;\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n\r\n","import {OnDestroy} from \"@angular/core\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\nexport class DefaultComponent implements OnDestroy {\r\n  _subscriptionList: Subscription;\r\n\r\n  constructor() {\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  /**\r\n   * unsubscribe all subscription which add into the component\r\n   * it is important to prevent subscription still exist when component is destroyed\r\n   */\r\n  unsubscribeAll() {\r\n    if (this._subscriptionList) {\r\n      this._subscriptionList.unsubscribe();\r\n    }\r\n    this._subscriptionList = new Subscription();\r\n\r\n  }\r\n\r\n  /**\r\n   * add subscriptions to component storage\r\n   * @param subscriptions\r\n   */\r\n  addSubscribes(...subscriptions) {\r\n    subscriptions.forEach((el) => {\r\n      this._subscriptionList.add(el);\r\n    });\r\n  }\r\n}\r\n","import {IDefaultModel} from './i-default-model';\r\n\r\nexport class DefaultModel implements IDefaultModel {\r\n  _raw: any;\r\n\r\n  constructor(data: any) {\r\n    if (data.hasOwnProperty('_raw')) {\r\n      delete data['_raw'];\r\n    }\r\n    this._raw = data;\r\n  }\r\n\r\n  copyInto(json): void {\r\n    for (let key in json) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = json[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  getData(): object {\r\n    const self = this;\r\n    const result = {};\r\n\r\n    Object.keys(this).map(key => {\r\n      if (this[key] instanceof DefaultModel) {\r\n        return;\r\n      }\r\n\r\n      switch (key) {\r\n        case '_raw':\r\n        case 'meals':\r\n        case 'items':\r\n          return;\r\n      }\r\n\r\n      result[key] = this[key];\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\n\r\nexport class Courier extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  vin: string = '';\r\n  driver_license: string = '';\r\n  email: string = '';\r\n  phone_no: string = '';\r\n  lat: number = 49.206762;\r\n  lng: number = -122.918458;\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\n\r\nexport class Customer extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  address: string = '';\r\n  lat: number = 0;\r\n  lng: number = 0;\r\n\r\n  phone_no: string = '';\r\n  email: string = '';\r\n\r\n  password: string = '';\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Point} from \"../point/point\";\r\nimport {DeliveryStatusHistory} from \"./delivery-status-history\";\r\nimport * as _ from 'lodash';\r\nimport {Order} from \"../order/order\";\r\nimport {Courier} from \"../courier/courier\";\r\nimport {Restaurant} from \"../restaurant/restaurant\";\r\nimport {Customer} from \"../customer/customer\";\r\n\r\nexport class Delivery extends DefaultModel {\r\n  id: string = '';\r\n  points: Point[] = [];\r\n  courier_id: string = '';\r\n  order_id: string = '';\r\n  status_history: DeliveryStatusHistory[] = [];\r\n  currentStatus: DeliveryStatusHistory = null;\r\n  timeToNextStatus: number = 0;\r\n\r\n  order: Order;\r\n  courier: Courier;\r\n  restaurant: Restaurant;\r\n  customer: Customer;\r\n  path_to_restaurant: any[] = [];\r\n  path_to_customer: any[] = [];\r\n\r\n  subscription;\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n    if (this.path_to_customer.length) {\r\n      this.path_to_customer = _.map(this.path_to_customer, x => JSON.parse(x));\r\n    }\r\n    if (this.path_to_restaurant.length) {\r\n      this.path_to_restaurant = _.map(this.path_to_restaurant, x => JSON.parse(x));\r\n    }\r\n  }\r\n\r\n  getData(): object {\r\n    const self = this;\r\n    const result = {};\r\n    Object.keys(this).map(key => {\r\n      if (this[key] instanceof DefaultModel) {\r\n        return;\r\n      }\r\n\r\n      switch (key) {\r\n        case '_raw':\r\n        case 'order':\r\n        case 'restaurant':\r\n        case 'customer':\r\n        case 'courier':\r\n        case 'points':\r\n        case 'subscription':\r\n          return;\r\n        case 'path_to_restaurant':\r\n        case 'path_to_customer': {\r\n          result[key] = _.map(self[key], (x) => {\r\n            return JSON.stringify(x);\r\n          });\r\n          // console.log(result[key]);\r\n          return;\r\n        }\r\n      }\r\n      result[key] = self[key];\r\n    });\r\n    return result;\r\n  }\r\n\r\n  setStatusHistory(histories: DeliveryStatusHistory[]) {\r\n    this.status_history = histories;\r\n    this.currentStatus = _.maxBy(histories, (x: DeliveryStatusHistory) => x.date_time);\r\n  }\r\n\r\n}\r\n\r\n","enum EnumOperation {\r\n  LESS = '<',\r\n  LESS_EQUAL = '<=',\r\n  EQUAL = '==',\r\n  GREATER = '>',\r\n  GREATER_EQUAL = '>='\r\n}\r\n\r\nexport class QueryParamModel {\r\n  static OPERATIONS = EnumOperation;\r\n  key: string;\r\n  operation: EnumOperation;\r\n  value: any;\r\n\r\n  constructor(key: string, operation: EnumOperation, value: any) {\r\n    this.key = key;\r\n    this.operation = operation;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\n","import {DefaultModel} from \"../default-model\";\r\n\r\nexport class Meal extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  description: string = '';\r\n  price: number = 0;\r\n  image: string = '';\r\n  restaurant_name: string = '';\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Restaurant} from \"../restaurant/restaurant\";\r\nimport {Customer} from \"../customer/customer\";\r\nimport {OrderItem} from \"../order_item/order-item\";\r\nimport {Delivery} from \"../delivery/delivery\";\r\n\r\nexport class Order extends DefaultModel {\r\n  id: string = '';\r\n  date_time: number = 0;\r\n  restaurant_id: string = '';\r\n  customer_id: string = '';\r\n  total: number = 0;\r\n\r\n  restaurant: Restaurant;\r\n  customer: Customer;\r\n  items: OrderItem[];\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Order} from \"../order/order\";\r\nimport {Meal} from \"../meal/meal\";\r\n\r\nexport class OrderItem extends DefaultModel {\r\n  id: string = '';\r\n  order_id: string = '';\r\n  meal_id: string = '';\r\n  quantity: number = 0;\r\n\r\n  order: Order;\r\n  meal: Meal;\r\n\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n}\r\n","export class Point {\r\n}\r\n","import {DefaultModel} from \"../default-model\";\r\nimport {Meal} from \"../meal/meal\";\r\n\r\nexport class Restaurant extends DefaultModel {\r\n  id: string = '';\r\n  name: string = '';\r\n  address: string = '';\r\n  phone_no: string = '';\r\n  img1: string = '';\r\n  img2: string = '';\r\n\r\n  del_time: string = '';\r\n  del_fee: string = '';\r\n\r\n  rating: number = 0;\r\n\r\n  lat: number = 0;\r\n  lng: number = 0;\r\n\r\n  meal_ids: string[] = [];\r\n  meals: Meal[] = [];\r\n\r\n  constructor(data: any) {\r\n    super(data);\r\n    super.copyInto(data);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport _ from 'lodash';\r\nimport {FirebaseDataService} from \"../firebase/firebase-data.service\";\r\nimport {Customer} from \"../../constant/models/customer/customer\";\r\nimport {Restaurant} from \"../../constant/models/restaurant/restaurant\";\r\nimport {Meal} from \"../../constant/models/meal/meal\";\r\nimport {Order} from \"../../constant/models/order/order\";\r\nimport {OrderItem} from \"../../constant/models/order_item/order-item\";\r\nimport {NotificationService} from \"../mics/notification.service\";\r\nimport {Courier, Delivery, Delivery_Status, Point, QueryParamModel} from \"../../constant/models\";\r\nimport {DeliveryStatusHistory} from \"../../constant/models/delivery/delivery-status-history\";\r\nimport moment from \"moment\";\r\nimport {MapService} from \"../map/map.service\";\r\n\r\nenum SIMULATOR_MESSAGE {\r\n  START = 'simulator start',\r\n  STEP = 'simulator step',\r\n  STOP = 'simulator stop',\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SimulatorDataService {\r\n  static MESSAGE = SIMULATOR_MESSAGE;\r\n\r\n  constructor(private _FirebaseDataService: FirebaseDataService,\r\n              private _NotificationService: NotificationService,\r\n              private _MapService: MapService) {\r\n\r\n  }\r\n\r\n  /**\r\n   * start simulator\r\n   * @returns {Promise<void>}\r\n   */\r\n  async start(time: number = 2000) {\r\n    this._NotificationService.pushMessage(SIMULATOR_MESSAGE.START);\r\n\r\n    // get delivery list\r\n    let deliveryList: Delivery[];\r\n    await this._FirebaseDataService.getDeliveries().then((rs) => deliveryList = rs);\r\n    deliveryList = _.filter(deliveryList, (x: Delivery) => {\r\n      return x.currentStatus.status !== Delivery_Status.DELIVERED;\r\n    });\r\n    if (deliveryList.length === 0) {\r\n      this._NotificationService.pushMessage(SIMULATOR_MESSAGE.STOP);\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // get order list\r\n    let orderList;\r\n    await this._FirebaseDataService.getOrders().then((rs) => orderList = rs);\r\n    _.map(deliveryList, (x: Delivery) => {\r\n      x.order = _.find(orderList, o => o.id == x.order_id);\r\n    })\r\n\r\n    let deliveredDeliveryList = [];\r\n    let interval = setInterval(() => {\r\n      if (deliveryList.length === deliveredDeliveryList.length) {\r\n        if (interval !== null) {\r\n          clearInterval(interval);\r\n        }\r\n        this._NotificationService.pushMessage(SIMULATOR_MESSAGE.STOP);\r\n      }\r\n\r\n      console.log('step');\r\n      _.map(deliveryList, async (x) => {\r\n        await this.handleDelivery(x);\r\n      });\r\n\r\n      deliveredDeliveryList = _.filter(deliveryList, (x: Delivery) => {\r\n        return x.currentStatus.status === Delivery_Status.DELIVERED;\r\n      });\r\n      this._NotificationService.pushMessage(SIMULATOR_MESSAGE.STEP);\r\n\r\n    }, time);\r\n  }\r\n\r\n  async handleDelivery(delivery: Delivery) {\r\n    if (delivery.timeToNextStatus >= moment().valueOf()) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    delivery.timeToNextStatus = moment().valueOf() + _.random(5, 10) * 1000;\r\n\r\n    let nextStatus = null;\r\n\r\n    switch (delivery.currentStatus.status) {\r\n      case Delivery_Status.ORDERED:\r\n        nextStatus = Delivery_Status.PREPARING;\r\n        break;\r\n      case Delivery_Status.PREPARING:\r\n        nextStatus = Delivery_Status.WAIT_FOR_PICK_UP;\r\n        break;\r\n      case Delivery_Status.WAIT_FOR_PICK_UP:\r\n        nextStatus = Delivery_Status.DELIVERING;\r\n        break;\r\n      case Delivery_Status.DELIVERING:\r\n        nextStatus = Delivery_Status.DELIVERED;\r\n        break;\r\n      default:\r\n        return Promise.resolve();\r\n    }\r\n    const statusHistory = new DeliveryStatusHistory({\r\n      status: nextStatus,\r\n      delivery_id: delivery.id,\r\n      date_time: moment().valueOf()\r\n    });\r\n\r\n    await this._FirebaseDataService.createWithObject(statusHistory);\r\n    await this._FirebaseDataService\r\n      .getStatusHistoryOfDelivery([new QueryParamModel('delivery_id', QueryParamModel.OPERATIONS.EQUAL, delivery.id)])\r\n      .then((rs) => {\r\n        delivery.setStatusHistory(rs);\r\n        console.log(delivery);\r\n      });\r\n\r\n  }\r\n\r\n  stop() {\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * randomly generate n number of orders\r\n   * @param n\r\n   * @returns {Promise<void>}\r\n   */\r\n  async generateOrder(n: number = 1) {\r\n    this._NotificationService.pushMessage(`generate ${n} order`);\r\n    return Promise.all([\r\n      this._FirebaseDataService.getCustomer(),\r\n      this._FirebaseDataService.getRestaurant(),\r\n      this._FirebaseDataService.getCourier(),\r\n    ])\r\n      .then(async ([customers, restaurants, couriers]) => {\r\n        for (let i = 0; i < n; i++) {\r\n          await this.generateOneOrder(customers, restaurants, couriers);\r\n        }\r\n        return;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * generate 1 order, 1 order item, 1 delivery, 1 delivery status history\r\n   * @param customers\r\n   * @param restaurants\r\n   * @param couriers\r\n   * @returns {Promise<void>}\r\n   */\r\n  async generateOneOrder(customers: Customer[], restaurants: Restaurant[], couriers: Courier[]) {\r\n    const customer: Customer = this.getRandom(customers);\r\n    const restaurant: Restaurant = this.getRandom(restaurants);\r\n    const meal: Meal = this.getRandom(restaurant.meals);\r\n    const courier: Courier = this.getRandom(couriers);\r\n\r\n    // create order\r\n    const order = new Order({\r\n      date_time: new Date().getTime(),\r\n      restaurant_id: restaurant.id,\r\n      customer_id: customer.id\r\n    });\r\n\r\n    await this._FirebaseDataService.createWithObject(order);\r\n\r\n    // create order item\r\n    const orderItem = new OrderItem(\r\n      {\r\n        meal_id: meal.id,\r\n        quantity: this.getRandom(5),\r\n        order_id: order.id\r\n      }\r\n    );\r\n    orderItem.meal = meal;\r\n    orderItem.order = order;\r\n\r\n    await this._FirebaseDataService.createWithObject(orderItem);\r\n    order.total += orderItem.meal.price * orderItem.quantity;\r\n    await this._FirebaseDataService.updateWithObject(order);\r\n\r\n    // create delivery\r\n    const delivery = new Delivery(\r\n      {\r\n        points: [],\r\n        courier_id: courier.id,\r\n        order_id: order.id\r\n      }\r\n    );\r\n\r\n    // add paths\r\n    await this._MapService.renderDirection(new google.maps.LatLng(courier.lat, courier.lng), new google.maps.LatLng(restaurant.lat, restaurant.lng))\r\n      .then((rs) => {\r\n        delivery.path_to_restaurant = rs;\r\n      });\r\n\r\n    await this._MapService.renderDirection(new google.maps.LatLng(restaurant.lat, restaurant.lng), new google.maps.LatLng(customer.lat, customer.lng))\r\n      .then((rs) => {\r\n        delivery.path_to_customer = rs;\r\n      });\r\n\r\n    console.log(delivery);\r\n    console.log(delivery.getData());\r\n\r\n    await this._FirebaseDataService.createWithObject(delivery);\r\n\r\n    // create delivery status\r\n    const deliveryStatusHistory = new DeliveryStatusHistory({\r\n      status: Delivery_Status.ORDERED,\r\n      delivery_id: delivery.id,\r\n      date_time: moment().valueOf()\r\n    });\r\n\r\n    await this._FirebaseDataService.createWithObject(deliveryStatusHistory);\r\n  }\r\n\r\n  /**\r\n   * get random\r\n   * @param value\r\n   * @returns {any | null | number}\r\n   */\r\n  getRandom(value: any[] | number): any {\r\n    if (!isNaN(Number(value))) {\r\n      return _.random(0, value) + 1;\r\n    } else {\r\n      value = value as unknown as any[];\r\n      return value[_.random(0, value.length - 1)];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport _ from 'lodash';\r\nimport {ENUM_TABLES} from \"../../constant/const-value\";\r\nimport {IDefaultModelConstructor} from \"../../constant/models/i-default-model\";\r\nimport restaurantData from \"../../dummy/restaurant.json\";\r\nimport courierData from \"../../dummy/courier.json\";\r\nimport mealData from \"../../dummy/meal.json\";\r\nimport customerData from \"../../dummy/customer.json\";\r\nimport {of} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DummyDataService {\r\n  readonly JSONS = {\r\n    [ENUM_TABLES.restaurant]: restaurantData,\r\n    [ENUM_TABLES.customer]: customerData,\r\n    [ENUM_TABLES.meal]: mealData,\r\n    [ENUM_TABLES.courier]: courierData,\r\n  };\r\n\r\n  constructor() {\r\n  }\r\n\r\n  convertDummyDataToModel(table: ENUM_TABLES, modelClass: IDefaultModelConstructor): Promise<any[]> {\r\n    if (!this.JSONS[table]) {\r\n      return Promise.resolve([]);\r\n    }\r\n    return of()\r\n      .toPromise()\r\n      .then(() => {\r\n        const data = this.JSONS[table];\r\n        const array = [];\r\n        _.map(data, (x) => {\r\n          const model = new modelClass(x);\r\n          array.push(model);\r\n        });\r\n        return array;\r\n      });\r\n  }\r\n\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  readonly _Observable_Message: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  reset(): void {\r\n    this._Observable_Message.next(null);\r\n  }\r\n\r\n  pushMessage(message: string) {\r\n    this._Observable_Message.next(message);\r\n  }\r\n\r\n  getMessageOservable() {\r\n    return this._Observable_Message;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NguiMapModule} from \"@ngui/map\";\r\n\r\ndeclare const google: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n\r\n  map;\r\n\r\n  constructor() {\r\n    // setTimeout(() => {\r\n    //   this.renderDirection(new google.maps.LatLng(49.205333, -122.920441), new google.maps.LatLng(49.206195, -122.911558))\r\n    //     .then((rs) => {\r\n    //       console.log(rs);\r\n    //     });\r\n    // },1000);\r\n  }\r\n\r\n  renderDirection(from, to): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const directionsService = new google.maps.DirectionsService;\r\n\r\n      directionsService.route({\r\n        origin: from,\r\n        destination: to,\r\n        travelMode: google.maps.TravelMode['DRIVING']\r\n      }, function (response, status) {\r\n        if (status === google.maps.DirectionsStatus['OK']) {\r\n          console.log(response);\r\n          resolve(response['routes'][0]['overview_path']);\r\n        } else {\r\n          window.alert('Directions request failed due to ' + status);\r\n          reject('error');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getLatLngFromAddress(address: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const geocoder = new google.maps.Geocoder;\r\n      geocoder.geocode({'address': address}, function (results, status) {\r\n        if (status === 'OK') {\r\n          console.log(results);\r\n          resolve(results[0]['geometry']['location']);\r\n        } else {\r\n          alert('Geocode was not successful for the following reason: ' + status);\r\n          reject('error');\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AngularFirestore} from '@angular/fire/firestore';\r\nimport {Customer} from '../../constant/models/customer/customer';\r\nimport _ from 'lodash';\r\nimport {DummyDataService} from '../data/dummy-data.service';\r\nimport {first, map, tap} from 'rxjs/operators';\r\nimport {IDefaultModel, IDefaultModelConstructor} from '../../constant/models/i-default-model';\r\nimport {Restaurant} from '../../constant/models/restaurant/restaurant';\r\nimport {Courier} from '../../constant/models/courier/courier';\r\nimport {Meal} from '../../constant/models/meal/meal';\r\nimport {ENUM_TABLES} from '../../constant/const-value';\r\nimport {NotificationService} from '../mics/notification.service';\r\nimport {OrderItem} from '../../constant/models/order_item/order-item';\r\nimport {Order} from '../../constant/models/order/order';\r\nimport {QueryParamModel} from '../../constant/models/query-param-model';\r\nimport {Delivery, Delivery_Status} from '../../constant/models';\r\nimport {DeliveryStatusHistory} from '../../constant/models/delivery/delivery-status-history';\r\nimport {MapService} from '../map/map.service';\r\nimport {AngularFireDatabase} from '@angular/fire/database';\r\nimport {AngularFireAuth} from '@angular/fire/auth';\r\nimport moment from 'moment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseDataService {\r\n  readonly TABLES = {\r\n    [ENUM_TABLES.customer]: {\r\n      name: ENUM_TABLES.customer,\r\n      class: Customer\r\n    },\r\n    [ENUM_TABLES.courier]: {\r\n      name: ENUM_TABLES.courier,\r\n      class: Courier\r\n    },\r\n    [ENUM_TABLES.restaurant]: {\r\n      name: ENUM_TABLES.restaurant,\r\n      class: Restaurant\r\n    },\r\n    [ENUM_TABLES.meal]: {\r\n      name: ENUM_TABLES.meal,\r\n      class: Meal\r\n    },\r\n    [ENUM_TABLES.order]: {\r\n      name: ENUM_TABLES.order,\r\n      class: Order\r\n    },\r\n    [ENUM_TABLES.delivery]: {\r\n      name: ENUM_TABLES.delivery,\r\n      class: Delivery\r\n    },\r\n    [ENUM_TABLES.order_item]: {\r\n      name: ENUM_TABLES.order_item,\r\n      class: OrderItem\r\n    },\r\n    [ENUM_TABLES.delivery_status_history]: {\r\n      name: ENUM_TABLES.delivery_status_history,\r\n      class: DeliveryStatusHistory\r\n    }\r\n  };\r\n\r\n  constructor(private _AngularFirestore: AngularFirestore,\r\n              private _AngularFireDatabase: AngularFireDatabase,\r\n              private _DummyDataService: DummyDataService,\r\n              private _NotificationService: NotificationService,\r\n              private _MapService: MapService,\r\n              private _AngularFireAuth: AngularFireAuth) {\r\n  }\r\n\r\n  /**\r\n   * reset DB\r\n   * @returns {Promise<void>}\r\n   */\r\n  async resetDB() {\r\n    // delete tables\r\n    await Promise.all(_.map(this.TABLES, async (x) => {\r\n      await this.deleteTable(x.name);\r\n    }));\r\n\r\n    // add tables\r\n    await Promise.all(_.map(this.TABLES, async (x) => {\r\n      await this.addDB(x);\r\n    }));\r\n\r\n    // converseMeal\r\n    await this.linkRestaurantMealDB();\r\n\r\n    this._NotificationService.pushMessage('All data is reset!!');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * link restaurant and meals data\r\n   * @returns {Promise<void>}\r\n   */\r\n  async linkRestaurantMealDB() {\r\n    this._NotificationService.pushMessage('Link Restaurant & Meal data');\r\n    await this.getRestaurant()\r\n      .then((restaurants) => {\r\n        // console.log(restaurants);\r\n        this.getMeals()\r\n          .then((meals) => {\r\n            // console.log(meals);\r\n            _.map(restaurants, (restaurant: Restaurant) => {\r\n              // console.log(restaurant);\r\n              restaurant.meal_ids = _.map(_.filter(meals, (meal: Meal) => {\r\n                return restaurant.name === meal.restaurant_name;\r\n              }), x => x.id);\r\n\r\n              this._AngularFirestore.collection(this.TABLES[ENUM_TABLES.restaurant].name)\r\n                .doc(restaurant.id).set(restaurant.getData());\r\n            });\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * add data of collection\r\n   * @param object\r\n   * @returns {Promise<unknown[]>}\r\n   */\r\n  private addDB(object) {\r\n    return this._DummyDataService.convertDummyDataToModel(object.name, object.class)\r\n      .then(async (rs) => {\r\n        if (!rs) {\r\n          return;\r\n        }\r\n        const itemsCollection = this._AngularFirestore.collection(object.name);\r\n        return await Promise.all(_.map(rs, async (x) => {\r\n          await itemsCollection.add(x.getData());\r\n          console.log(`add ${object.name}`);\r\n          this._NotificationService.pushMessage(`add ${object.name}`);\r\n        }));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get customer data\r\n   * @returns {Promise<Customer[]>}\r\n   */\r\n  getCustomer(): Promise<Customer[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.customer])\r\n      .then((rs) => rs as unknown as Customer[]);\r\n  }\r\n\r\n  /**\r\n   * get customer by email\r\n   * @param email\r\n   * @returns {Promise<Customer>}\r\n   */\r\n  getCustomerByEmail(email: string): Promise<Customer> {\r\n    return this.getCustomer()\r\n      .then((rs) => {\r\n        return _.find(rs, x => x.email === email);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get courier data\r\n   * @returns {Promise<Courier[]>}\r\n   */\r\n  getCourier(): Promise<Courier[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.courier])\r\n      .then((rs) => rs as unknown as Courier[]);\r\n  }\r\n\r\n  /**\r\n   * get delivery data\r\n   * @returns {Promise<Delivery[]>}\r\n   */\r\n  getDeliveries(): Promise<Delivery[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.delivery])\r\n      .then((rs) => rs as unknown as Delivery[])\r\n      .then((rs) => {\r\n        return this.getDeliveryStatusHistory()\r\n          .then((histories) => {\r\n            _.map(rs, (delivery: Delivery) => {\r\n              delivery.setStatusHistory(_.filter(histories, (x: DeliveryStatusHistory) => x.delivery_id === delivery.id));\r\n            });\r\n            return rs;\r\n          });\r\n      })\r\n      .then((rs) => {\r\n        return Promise.all(_.map(rs, async (d: Delivery) => {\r\n          await this.getOrderById(d.order_id)\r\n            .then((o) => {\r\n              d.order = o;\r\n            });\r\n          return Promise.resolve();\r\n        }))\r\n          .then(() => {\r\n            return rs;\r\n          });\r\n      });\r\n  }\r\n\r\n  getDeliveryById(id: string): Promise<Delivery> {\r\n    return this.getDBWithId(this.TABLES[ENUM_TABLES.delivery], id)\r\n      .then((rs) => rs as unknown as Delivery)\r\n      .then((rs) => {\r\n        return this.getDeliveryStatusHistory()\r\n          .then((histories) => {\r\n            rs.setStatusHistory(_.filter(histories, (x: DeliveryStatusHistory) => x.delivery_id === id));\r\n            return rs;\r\n          });\r\n      });\r\n  }\r\n\r\n  getDeliveryStatusHistory(): Promise<DeliveryStatusHistory[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.delivery_status_history])\r\n      .then((rs) => rs as unknown as DeliveryStatusHistory[]);\r\n  }\r\n\r\n  async getStatusHistoryOfDelivery(queryParams?: QueryParamModel[]): Promise<DeliveryStatusHistory[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.delivery_status_history], queryParams)\r\n      .then((rs) => rs as unknown as DeliveryStatusHistory[]);\r\n  }\r\n\r\n  /**\r\n   * get restaurant data\r\n   * @returns {Promise<Restaurant[]>}\r\n   */\r\n  getRestaurant(): Promise<Restaurant[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.restaurant])\r\n      .then((restaurants) => {\r\n        return this.getMeals()\r\n          .then((meals) => {\r\n            _.map(restaurants, (restaurant: Restaurant) => {\r\n              restaurant.meals = _.filter(meals, (meal: Meal) => {\r\n                return restaurant.meal_ids.indexOf(meal.id) >= 0;\r\n              });\r\n            });\r\n            return restaurants as unknown as Restaurant[];\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get meals data\r\n   * @returns {Promise<Meal[]>}\r\n   */\r\n  getMeals(): Promise<Meal[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.meal])\r\n      .then((rs) => rs as unknown as Meal[]);\r\n  }\r\n\r\n  /**\r\n   * get order items data\r\n   * @param queryParams\r\n   * @returns {Promise<Meal[]>}\r\n   */\r\n  async getOrderItems(queryParams?: QueryParamModel[]): Promise<OrderItem[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.order_item], queryParams)\r\n      .then((rs) => rs as unknown as OrderItem[])\r\n      .then((orderItems) => {\r\n        _.map(orderItems, async (orderItem: OrderItem) => {\r\n          // get meal\r\n          await this.getDBWithId(this.TABLES[ENUM_TABLES.meal], orderItem.meal_id)\r\n            .then((meal) => {\r\n              orderItem.meal = meal as unknown as Meal;\r\n            });\r\n        });\r\n        return orderItems;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get order details\r\n   * @returns {Promise<Order[]>}\r\n   */\r\n  async getOrders(): Promise<Order[]> {\r\n    return this.getDB(this.TABLES[ENUM_TABLES.order])\r\n      .then((rs) => rs as unknown as Order[])\r\n      .then((orders) => {\r\n        orders = orders as unknown as Order[];\r\n        return Promise.all(_.map(orders, async (order: Order) => {\r\n\r\n          // get customer of each order\r\n          await this.getDBWithId(this.TABLES[ENUM_TABLES.customer], order.customer_id)\r\n            .then((customer) => {\r\n              order.customer = customer as unknown as Customer;\r\n            });\r\n\r\n          // get item of each order\r\n          await this.getOrderItems([new QueryParamModel('order_id', QueryParamModel.OPERATIONS.EQUAL, order.id)])\r\n            .then((items) => {\r\n              order.items = items as unknown as OrderItem[];\r\n            });\r\n\r\n          // get restaurant for each order\r\n          await this.getDBWithId(this.TABLES[ENUM_TABLES.restaurant], order.restaurant_id)\r\n            .then((restaurant) => {\r\n              order.restaurant = restaurant as unknown as Restaurant;\r\n            });\r\n          return Promise.resolve();\r\n        })).then(() => {\r\n          return orders;\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n  async getOrderById(id: string): Promise<Order> {\r\n    return this.getDBWithId(this.TABLES[ENUM_TABLES.order], id)\r\n      .then((rs) => rs as unknown as Order)\r\n      .then(async (order) => {\r\n        order = order as unknown as Order;\r\n\r\n        // get customer of each order\r\n        await this.getDBWithId(this.TABLES[ENUM_TABLES.customer], order.customer_id)\r\n          .then((customer) => {\r\n            order.customer = customer as unknown as Customer;\r\n          });\r\n\r\n        // get item of each order\r\n        await this.getOrderItems([new QueryParamModel('order_id', QueryParamModel.OPERATIONS.EQUAL, order.id)])\r\n          .then((items) => {\r\n            order.items = items as unknown as OrderItem[];\r\n          });\r\n\r\n        // get restaurant for each order\r\n        await this.getDBWithId(this.TABLES[ENUM_TABLES.restaurant], order.restaurant_id)\r\n          .then((restaurant) => {\r\n            order.restaurant = restaurant as unknown as Restaurant;\r\n          });\r\n\r\n        return order;\r\n      });\r\n\r\n  }\r\n\r\n  /**\r\n   * get data of collection\r\n   * @param object\r\n   * @returns {Promise<IDefaultModelConstructor[]>}\r\n   */\r\n  private getDB(object, queryParams?: QueryParamModel[], id?: string): Promise<IDefaultModelConstructor[]> {\r\n    const collection = this._AngularFirestore.collection(object.name, ref => {\r\n      let newRef = null;\r\n      if (!!queryParams) {\r\n        _.map(queryParams, (x: QueryParamModel) => {\r\n          newRef = newRef ? newRef.where(x.key, x.operation, x.value) : ref.where(x.key, x.operation, x.value);\r\n        });\r\n      }\r\n      return newRef || ref;\r\n    });\r\n\r\n    return collection\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(items => items.map(a => {\r\n          const data = a.payload.doc.data() as Object;\r\n          const id = a.payload.doc.id;\r\n          // update id\r\n          data['id'] = id;\r\n          return data;\r\n        })),\r\n        map((items) => _.filter(items, doc => {\r\n          if (!!id) {\r\n            return doc.id === id;\r\n          }\r\n          return doc;\r\n        }))\r\n      )\r\n      .pipe(tap(), first()).toPromise()\r\n      .then((rs) => {\r\n        return this.convertToClassObject(rs, object.class);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get object by id\r\n   * @param object\r\n   * @param id\r\n   * @returns {Promise<IDefaultModelConstructor[]>}\r\n   */\r\n  private getDBWithId(object, id: string): Promise<IDefaultModelConstructor> {\r\n    const collection = this._AngularFirestore.doc(`${object.name}/${id}`);\r\n    return collection\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(a => {\r\n          const data = a.payload.data() as Object;\r\n          const id = a.payload.id;\r\n          // update id\r\n          data['id'] = id;\r\n          return data;\r\n        })\r\n      )\r\n      .pipe(tap(), first()).toPromise()\r\n      .then((rs) => {\r\n        const array = this.convertToClassObject([rs], object.class);\r\n        return array.length ? array[0] : null;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * convert data to class object\r\n   * @param data\r\n   * @param modelClass\r\n   * @returns {any[]}\r\n   */\r\n  private convertToClassObject(data: any[], modelClass: IDefaultModelConstructor): IDefaultModelConstructor[] {\r\n    const array = [];\r\n    _.map(data, (x) => {\r\n      const model = new modelClass(x);\r\n      array.push(model);\r\n    });\r\n    // console.log(array);\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * create document, set id\r\n   * @param object\r\n   * @returns {Promise<void>}\r\n   */\r\n  createWithObject(object: IDefaultModel): Promise<void> {\r\n    const id = this._AngularFirestore.createId();\r\n    const collection = this._AngularFirestore.collection(this.getTable(object.constructor.name));\r\n    return collection.doc(id).set(object.getData())\r\n      .then(() => {\r\n        object.id = id;\r\n        this._NotificationService.pushMessage(`Created ${object.constructor.name}`);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * update document\r\n   * @param object\r\n   */\r\n  updateWithObject(object: IDefaultModel) {\r\n    const collection = this._AngularFirestore.collection(this.getTable(object.constructor.name));\r\n    return collection.doc(object.id).update(object.getData());\r\n  }\r\n\r\n  /**\r\n   * get table name from class name\r\n   * @param className\r\n   * @returns {any}\r\n   */\r\n  getTable(className: string) {\r\n    return _.find(this.TABLES, (table) => {\r\n      return table.class.name === className;\r\n    }).name;\r\n  }\r\n\r\n  /*========delete=========*/\r\n\r\n  deleteOrder() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.order].name);\r\n  }\r\n\r\n  deleteOrderItem() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.order_item].name);\r\n  }\r\n\r\n  deleteDelivery() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.delivery].name);\r\n  }\r\n\r\n  deleteDeliveryStatus() {\r\n    return this.deleteTable(this.TABLES[ENUM_TABLES.delivery_status_history].name);\r\n  }\r\n\r\n  /**\r\n   * delete data of collection\r\n   * @param name\r\n   * @returns {Promise<void>}\r\n   */\r\n  private deleteTable(name: string) {\r\n    return this._AngularFirestore.collection(name).get().toPromise()\r\n      .then(async res => {\r\n\r\n        const array = [];\r\n        res.forEach(element => {\r\n          array.push(element);\r\n        });\r\n        await Promise.all(_.map(array, async element => {\r\n          await element.ref.delete();\r\n          console.log(`delete ${name}`);\r\n          this._NotificationService.pushMessage(`delete ${name}`);\r\n        }));\r\n      });\r\n  }\r\n\r\n  getPointsRealTime(id) {\r\n    return this.getRealTimeDB('points', id);\r\n  }\r\n\r\n  getRealTimeDB(name: string, id: string) {\r\n    return this._AngularFireDatabase.list(`${name}/${id}`).valueChanges();\r\n  }\r\n\r\n  /*authentication*/\r\n\r\n  /**\r\n   * Sign in with email/password\r\n   * @param user\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async signUp(user: Customer) {\r\n\r\n    const geoPoint = await this._MapService.getLatLngFromAddress(user.address);\r\n    user.lat = geoPoint.lat();\r\n    user.lng = geoPoint.lng();\r\n\r\n    return this._AngularFireAuth.createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((result) => {\r\n        // create customer object\r\n        delete user.password;\r\n        return this.createWithObject(user)\r\n          .then(() => {\r\n            return true;\r\n          });\r\n      }).catch((error) => {\r\n        window.alert(error.message);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Sign in with email/password\r\n   * @param user\r\n   * @returns {Promise<Customer>}\r\n   */\r\n  signIn(user: Customer): Promise<Customer> {\r\n    return this._AngularFireAuth.signInWithEmailAndPassword(user.email, user.password)\r\n      .then((result) => {\r\n        // console.log(result);\r\n        return this.getCustomerByEmail(user.email);\r\n      }).catch((error) => {\r\n        window.alert(error.message);\r\n        return null;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get random\r\n   * @param value\r\n   * @returns {any | null | number}\r\n   */\r\n  getRandom(value: any[] | number): any {\r\n    if (!isNaN(Number(value))) {\r\n      return _.random(0, value) + 1;\r\n    } else {\r\n      value = value as unknown as any[];\r\n      return value[_.random(0, value.length - 1)];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * checkout\r\n   * @param customer\r\n   * @param restaurant\r\n   * @param orderItems\r\n   * @returns {Promise<void>}\r\n   */\r\n  async checkout(customer: Customer, restaurant: Restaurant, orderItems: OrderItem[]) {\r\n    let delivery;\r\n    try {\r\n      const courier: Courier = this.getRandom(await this.getCourier());\r\n\r\n      // create order\r\n      const order = new Order({\r\n        date_time: new Date().getTime(),\r\n        restaurant_id: restaurant.id,\r\n        customer_id: customer.id\r\n      });\r\n\r\n      await this.createWithObject(order);\r\n\r\n      // create order items\r\n      await Promise.all(_.map(orderItems, async x => {\r\n        x.order_id = order.id;\r\n        x.order = order;\r\n        await this.createWithObject(x);\r\n        order.total += x.meal.price * x.quantity;\r\n        return Promise.resolve();\r\n      }));\r\n\r\n      order.total = Math.round(order.total * 100) / 100.0;\r\n\r\n      await this.updateWithObject(order);\r\n\r\n      // create delivery\r\n      delivery = new Delivery(\r\n        {\r\n          points: [],\r\n          courier_id: courier.id,\r\n          order_id: order.id\r\n        }\r\n      );\r\n\r\n      // add paths\r\n      await this._MapService.renderDirection(new google.maps.LatLng(courier.lat, courier.lng), new google.maps.LatLng(restaurant.lat, restaurant.lng))\r\n        .then((rs) => {\r\n          delivery.path_to_restaurant = rs;\r\n        });\r\n\r\n      await this._MapService.renderDirection(new google.maps.LatLng(restaurant.lat, restaurant.lng), new google.maps.LatLng(customer.lat, customer.lng))\r\n        .then((rs) => {\r\n          delivery.path_to_customer = rs;\r\n        });\r\n\r\n      await this.createWithObject(delivery);\r\n\r\n      // create delivery status\r\n      const deliveryStatusHistory = new DeliveryStatusHistory({\r\n        status: Delivery_Status.ORDERED,\r\n        delivery_id: delivery.id,\r\n        date_time: moment().valueOf()\r\n      });\r\n\r\n      await this.createWithObject(deliveryStatusHistory);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return Promise.resolve()\r\n        .then(() => null);\r\n    }\r\n\r\n    return Promise.resolve()\r\n      .then(() => delivery);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibraryAppService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  testString() {\r\n    return 'Hello';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-library-app',\r\n  template: `\r\n    <p>\r\n      library-app works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LibraryAppComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {LibraryAppComponent} from './library-app.component';\r\nimport {NguiMapModule} from \"@ngui/map\";\r\n\r\n@NgModule({\r\n  declarations: [LibraryAppComponent],\r\n  imports: [\r\n    NguiMapModule.forRoot({\r\n      apiUrl: `https://maps.google.com/maps/api/js?libraries=drawing&key=AIzaSyDrnDCTwDNyiqxi-qkY1wMRCpbBMA8LFYc`\r\n    })\r\n  ],\r\n  exports: [LibraryAppComponent]\r\n})\r\nexport class LibraryAppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestAppService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  testString() {\r\n    return 'Hello Test App';\r\n  }\r\n}\r\n"]}